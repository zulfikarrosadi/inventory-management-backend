{
	"info": {
		"_postman_id": "8378b44d-9056-4eeb-a4f3-294115893b63",
		"name": "Inventory Management System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14124784",
		"_collection_link": "https://dark-meadow-855364.postman.co/workspace/Belajar~41e0fb13-11ad-45d4-9753-7a70a577ec62/collection/14124784-8378b44d-9056-4eeb-a4f3-294115893b63?action=share&source=collection_link&creator=14124784"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"if(pm.response.code === 201) {\r",
									"    const result = pm.response.json();\r",
									"    pm.collectionVariables.set(\"current_username\", result.data.user.username);\r",
									"    pm.collectionVariables.set(\"current_user_id\", result.data.user.id);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"passwordConfirmation\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{current_username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Warehouse",
			"item": [
				{
					"name": "Create Warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"if (pm.response.code === 201) {\r",
									"    const result = pm.response.json();\r",
									"    const warehouses = result.data.warehouses\r",
									"    pm.collectionVariables.set('warehouse_id', warehouses[0].id)\r",
									"    pm.collectionVariables.set('warehouse_id_to_delete', warehouses[warehouses.length - 1].id)\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/warehouses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"warehouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Warehouses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"    const result = pm.response.json();\r",
									"    const warehouses = result.data.warehouses\r",
									"    pm.collectionVariables.set('warehouse_id', warehouses[0].id)\r",
									"    pm.collectionVariables.set('warehouse_id_to_delete', warehouses[warehouses.length - 1].id)\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/warehouses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"warehouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stocks From Warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/warehouses/:id/stocks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"warehouses",
								":id",
								"stocks"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{warehouse_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Warehouse",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"address\": \"{{$randomStreetAddress}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/warehouses/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"warehouses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{warehouse_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/warehouses/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"warehouses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{warehouse_id_to_delete}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory",
			"item": [
				{
					"name": "Create Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 201) {\r",
									"    const result = pm.response.json()\r",
									"    pm.collectionVariables.set(\"current_stock_id\", result.data.stocks.id)\r",
									"}\r",
									"\r",
									"pm.test('should return 201 status code', function() {\r",
									"    pm.response.to.have.status(201)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomNoun}}\",\r\n    \"quantity\": 10,\r\n    \"purchase_date\": \"{{$randomDateRecent}}\",\r\n    \"stock_due_date\": \"{{$randomDateFuture}}\",\r\n    \"supplier\": \"{{$randomCompanyName}}\",\r\n    \"cost_price\": 4500,\r\n    \"created_at\": \"{{$randomDateRecent}}\",\r\n    \"warehouse_id\": {{warehouse_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/stocks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stock By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/stocks/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stocks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{current_stock_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Stocks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const purchase_date_iso = new Date().toISOString()\r",
									"pm.collectionVariables.set('purchase_date', purchase_date_iso)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomNoun}}\",\r\n    \"quantity\": 10,\r\n    \"purchase_date\": \"{{purchase_date}}\",\r\n    \"stock_due_date\": \"{{$randomDateFuture}}\",\r\n    \"supplier\": \"{{$randomCompanyName}}\",\r\n    \"cost_price\": 4500,\r\n    \"updated_at\": \"{{$randomDateRecent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/stocks/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stocks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{current_stock_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Stock By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/stocks/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stocks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{current_stock_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "current_username",
			"value": "",
			"type": "default"
		},
		{
			"key": "password",
			"value": "password",
			"type": "default"
		},
		{
			"key": "current_user_id",
			"value": "",
			"type": "default"
		},
		{
			"key": "base_url",
			"value": "http://localhost:3000/api",
			"type": "default"
		},
		{
			"key": "current_stock_id",
			"value": "",
			"type": "default"
		},
		{
			"key": "warehouse_id",
			"value": "",
			"type": "default"
		},
		{
			"key": "warehouse_id_to_delete",
			"value": "",
			"type": "default"
		}
	]
}